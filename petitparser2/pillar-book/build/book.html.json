{"content":"\n<p>\nIn this series we describe <a href=\"https://github.com/kursjan/petitparser2\">PetitParser2</a> --- a modular and flexible high-performance top-down parsing framework.\n</p>\n<p class=\"note\">Please note the text is not yet complete.</p><p>\n \nThis series is organized in two parts: \n</p>\n<section>\n<h3>Part I, Basics</h3>\n<p>\nIn the first part, basics, we demonstrate how to quickly build a high-performance parser on the concrete example of extracting a Javascript code from any HTML source.\n</p>\n<p>\nWe start from prototyping in a playground until we reach a full-fledged and well-tested parser. \nWe will utilize bounded seas --- a tool that allows a programmer to focus on the interesting parts of an input (i.e. Javascript in our case) and ignore the rest (the remaining HTML code).\nWe will use optimizations capabilities of PetitParser2 to turn our prototype into a production-ready parser. \n</p>\n\n</section><section>\n<h3>Part II, Advanced Topics</h3>\n<p>\nIn the second part we describe advanced topics such as context-sensitive parsing, optimizations with caches and parser specializations, streaming capabilities or efficient highlighting of a text, when PetitParser is capable of continuous re-parsing of the whole input with every keystroke.\n</p>\n<p>\nOn a concrete example of a Smalltalk grammar, we describe how to develop a high-performance parser comparable to a table-driven such as <a href=\"https://github.com/ThierryGoubier/SmaCC\">SmaCC</a> or hand-written parsers such as RBParser. \n</p>\n<p class=\"todo\">add some graphs?</p>\n</section><section>\n<h3>Structure</h3>\n\n<p>\nThe text is divided into two parts, the first part covers basics of PetitParser and is suitable for anyone who would like to start with PetitParser.\nThe second part covers advanced topics and is for those who already use PetitParser and who would like to better understand its internals or extend PetitParser to their needs.\n</p>\n</section><section>\n<h3>Part I, Basics</h3>\n<p>\nIn <a href=\"Chapters/chapter1.html\">Extracting Javascript</a> we start with a simple script.\nLater in <a href=\"Chapters/chapter2.html\">Real Grammar</a>, we turn the script into a proper grammar and add tests.\nIn <a href=\"Chapters/chapter3.html\">Extracting Structure</a> and <a href=\"Chapters/AST.html\">Abstract Syntax Tree</a>, we extend the parser to extract an HTML structure and we add tolerance for malformed documents.\n</p>\n<p>\nIn <a href=\"Chapters/optimizations.html\">Optimizations</a> we inspect optimizations capabilities of PetitParser2\nand in <a href=\"Chapters/memoization.html\">Memoizations</a> we describe tooling of PetitParser2 that will help us to pinpoint the perofrmance bottlenecks and we show some techniques how to fix them.\n</p>\n</section><section>\n<h3>Part II, Advanced Topics</h3>\n<p class=\"todo\">create a chapter about syntax highlighting</p><p class=\"todo\">create a chapter about specializations </p>\n</section><section>\n<h3>License</h3>\n<p>\nThe text is released under the <a href=\"LICENSE.html\">MIT license</a>.\n</p>\n</section>","title":"Parsing with PetitParser2","Author":"Jan Kurs"}