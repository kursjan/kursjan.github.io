{"content":"<p>\nThis text is part of the PetitParser2 series:\n</p><ul>\n<li><a href=\"Chapters/../chapter1.html\">Extracting Javascript</a></li>\n<li><a href=\"Chapters/../chapter2.html\">From Script to Parser</a></li>\n<li><a href=\"Chapters/../chapter3.html\">Extracting Structure</a></li>\n<li><a href=\"Chapters/../chapter4.html\">Optimizations</a></li>\n<li><a href=\"Chapters/../chapter5.html\">Memoization</a></li>\n</ul>\n\n<section>\n<h1>Turning the script into a real parser</h1>\n<a id=\"sec:grammar\"></a>\n<p>\nOnce you decide to extend the grammar, it is inconvenient to keep it in a script. \nIt is a good practice to define a proper parser, because it allows us to\nmanage cyclic dependencies, \nsimplify testing and \nextend with new functionality. \n</p>\n<section>\n<h3>Hands On</h3>\n<p>\nWe create a parser by subclassing <code>PP2CompositeNode</code>:\n</p>\n<figure><pre><code class=\"smalltalk\">PP2CompositeNode subclass: #WebGrammar\n\tinstanceVariableNames: 'document javascript elOpen elContent elClose elementName element text jsOpen jsContent jsClose jsString structuredDocument comment any'\n\tclassVariableNames: ''\n\tpoolDictionaries: ''\n\tcategory: 'PetitParser2-Tutorial'</code></pre><figcaption></figcaption></figure>\n\n<p>\nWe define a <code>javascipt</code> rule as follows:\n</p>\n<figure><pre><code class=\"smalltalk\">WebGrammar&gt;&gt;javascript\n\t^ jsOpen, jsContent, jsClose ==&gt; #second</code></pre><figcaption></figcaption></figure>\n\n<p>\nThe rules of <code>javascript</code> are defined as follows:\n</p><figure><pre><code class=\"smalltalk\">WebGrammar&gt;&gt;jsOpen\n\t^ '&lt;script&gt;' asPParser\n\nWebGrammar&gt;&gt;jsClose\n\t^ '&lt;/script&gt;' asPParser\n\nWebGrammar&gt;&gt;jsContent\n\t^ (jsString / #any asPParser) starLazy\n\nWebGrammar&gt;&gt;jsString\n\t^ $' asPParser, any starLazy, $' asPParser\nWebGrammar&gt;&gt;any\n\t^ #any asPParser</code></pre><figcaption></figcaption></figure>\n\n<p>\nFirst, we would like to cover <code>javascript</code> rule with some test to make sure the rule works as expected. \nWe start by subclassing <code>PP2CompositeParserTest</code>:\n</p>\n<figure><pre><code class=\"smalltalk\">PP2CompositeNodeTest subclass: #WebGrammarTest\n\tinstanceVariableNames: ''\n\tclassVariableNames: ''\n\tpoolDictionaries: ''\n\tcategory: 'PetitParser2-Tutorial'\n\nWebGrammarTest&gt;&gt;parserClass\n\t^ WebGrammar\n\nWebGrammarTest&gt;&gt;testJavascript\n\tself parse: '&lt;script&gt;alert(&quot;hi there!&quot;)&lt;/script&gt;' rule: #javascript\t</code></pre><figcaption></figcaption></figure>\n\n<p>\nTo extract a javascript from an html document, we first define the <code>document</code> rule simply as <code>javascript</code> because we are interested only in javascript:\n</p>\n<figure><pre><code class=\"smalltalk\">WebGrammar&gt;&gt;document\n\t^ (javascript sea ==&gt; #second) star</code></pre><figcaption></figcaption></figure>\n\n<p>\nOr alternatively:\n</p><figure><pre><code class=\"smalltalk\">WebGrammar&gt;&gt;document\n\t^ javascript islandInSea star</code></pre><figcaption></figcaption></figure>\n\n<p>\nThe <code>islandInSea</code> operator is a shorthand for:\n</p><figure><pre><code class=\"smalltalk\">sea ==&gt; #second</code></pre><figcaption></figcaption></figure>\n\n<p>\nWe should not forget the <code>start</code> rule:\n</p><figure><pre><code class=\"smalltalk\">WebGrammar&gt;&gt;start\n\t^ structuredDocument </code></pre><figcaption></figcaption></figure>\n\n<p>\nAnd finally, we write a test for <code>document</code>:\n</p>\n<figure><pre><code class=\"smalltalk\">WebGrammarTest&gt;&gt;testDocument\n\t| input |\n\tinput := PP2Sources current htmlSample.\n\t\n\tself parse: input rule: #document.\n\tself assert: result size equals: 2.</code></pre><figcaption></figcaption></figure>\n\n\n<p>\nYou can download the sources here:\n</p><ul>\n<li><a href=\"../WebGrammar.st\"><code>WebGrammar</code></a> </li>\n<li><a href=\"../WebGrammarTest.st\"><code>WebGrammarTest</code></a></li>\n</ul>\n</section></section>","title":"PetitParser2 and Bounded Seas","Author":"Jan Kurs"}